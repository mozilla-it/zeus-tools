#!/bin/bash

# This is meant to be used as a shell script invoked in a cron for backing up
# the current state of the conf/ folder in zeus' install path.

# provide correct path to override the following two positional arguments                                                                                          [122/1848]

CMD=`basename "$0"`
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CONF=${1:-~/zeus-conf}; CONF=`readlink -f $CONF`
BKUP=${2:-~/zeus-bkup}; BKUP=`readlink -f $BKUP`
REV=${3:HEAD}

EXCLUDES=(
    .git
    .gitignore
)
EXCLUDES=`printf -- "--exclude=%s " "${EXCLUDES[@]}"`

if [ -n "$DEBUG" ]; then
    set -x
fi
if [ "$CONF" == "$BKUP" ]; then
    echo "CONF=$CONF cannot match BKUP=$BKUP!"
    exit 1
fi
if ! hash git 2> /dev/null; then
    echo "git not installed!"
    exit 1
fi
if ! hash rsync 2> /dev/null; then
    echo "rsync not installed!"
    exit 1
fi

is_repo() {
    if [ -d "$BKUP" ]; then
        if [ "true" == "`cd "$BKUP" && git rev-parse --is-inside-work-tree 2> /dev/null`" ]; then
            return 0
        fi
    fi
    return 1
}

init_repo() {
    mkdir -p $BKUP
    cp $DIR/gitignore $BKUP/.gitignore
    (cd $BKUP && git init -q)
    (cd $BKUP && git add .gitignore)
    (cd $BKUP && git commit -q -m"initial add of .gitignore")
}

backup() {
    if ! is_repo; then
        init_repo
    fi
    rsync -rav --quiet --delete $EXCLUDES $CONF/ $BKUP/
    (cd $BKUP && git add --all . > /dev/null)
    MSG="`cd $BKUP && git status --short`"
    if [ -n "$MSG" ]; then
        (cd $BKUP && git commit -q -m "$MSG")
    fi
}

restore() {
    REV=`cd $BKUP && git rev-parse $REV`
    (cd $BKUP && git clean -xfd && git reset --hard $REV)
    rsync -rav --delete $EXCLUDES $BKUP/ $CONF/
    (cd $BKUP && git reset --hard HEAD)
}

if ! is_repo; then
    init_repo
fi


case "$CMD" in
    zeus-backup)
        backup
        ;;
    zeus-restore)
        backup
        restore
        ;;
    *)
        echo "unknown CMD=$CMD!"
        exit 1
        ;;
esac
